version: '3'
services:
  model-service:
    build: ./model_py
    container_name: model-service
    volumes:
      - .:/app
    networks:
      - my-network

  main-service:
    build: ./main_py
    container_name: main-service
    environment:
      - environment:OIDC_CLIENT_SECRETS=/main_py/config/client_secrets.json
    volumes:
      - ./config:/app/config
    depends_on:
      - stats_db
    networks:
      - my-network

  db-service:
    build: ./db_py
    container_name: db-service
    depends_on:
      - stats_db
    networks:
      - my-network

  auth-service:
    build: ./auth_py
    container_name: auth-service
    environment:
      - environment:OIDC_CLIENT_SECRETS=/app/config/client_secrets.json
    volumes:
      - ./config:/app/config
    ports:
      - 4001:4000
    networks:
      - my-network

  gateway:
    build: ./gateway
    container_name: gateway
    environment:
      - environment:OIDC_CLIENT_SECRETS=/app/config/client_secrets.json
    volumes:
      - ./config:/app/config
    ports:
      - 4000:4000
    depends_on:
      - model-service
      - main-service
      - db-service
      - auth-service
    networks:
      - my-network

  stats_db:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'stats_db'
      MYSQL_USER: 'stats'
      MYSQL_PASSWORD: 'stats'
      MYSQL_ROOT_PASSWORD: 'root_password'
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
volumes:
  mysql_data:
  postgres_data:1~volumes:
  mysql_data:
  postgres_data:1~
volumes:
  mysql_data:
  postgres_data:1~volumes:
  mysql_data:
  postgres_data:1~volumes:
  mysql_data:
  postgres_data:1~volumes:
  mysql_data:
  postgres_data:
